<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" 
    width="100%" height="100%"
    creationComplete="init()"
    label="{resourceManager.getString('resources','statuscomponent.label')}">
    <mx:Script>
        <![CDATA[
            import com.scopix.global.GlobalParameters;
            import com.scopix.reporting.controller.actions.ReportingAction;
            import com.scopix.reporting.model.ReportingModel;
            
            import mx.formatters.DateFormatter;
            import mx.utils.ObjectUtil;
            
            [Bindable]
            private var action:ReportingAction;
            
            [Bindable]
            private var model:ReportingModel;
            
            [Bindable]
            private var widthFields:Number = 140;
            
            private function init():void {
                action = ReportingAction.getInstance();
                model = ReportingModel.getInstance();
            }
            
            private function statusLabelFunction(item:Object, column:AdvancedDataGridColumn):String {
                var itemLabel:String = "";
                switch(column.dataField) {
                    case "store":
                        itemLabel = item.store.description;
                        break;
                    case "areaType":
                        itemLabel = item.areaType.description;
                        break;
                    case "dateEnd":
                        var dfDate:DateFormatter = new DateFormatter();
                        dfDate.formatString = GlobalParameters.getInstance().dateFormat;
                        itemLabel = dfDate.format(item.dateEnd);
                    	break;
                }
                
                return itemLabel;
            }
            
            private function storeSortCompareFunction(itemA:Object, itemB:Object):int
            {
                return ObjectUtil.stringCompare(itemA.store.description, itemB.store.description);
            }

            private function areaSortCompareFunction(itemA:Object, itemB:Object):int
            {
                return ObjectUtil.stringCompare(itemA.areaType.description, itemB.areaType.description);
            }

            private function upRecordsSortCompareFunction(itemA:Object, itemB:Object):int
            {
                return ObjectUtil.numericCompare(itemA.upRecords, itemB.upRecords);
            }

            private function totalRecordsSortCompareFunction(itemA:Object, itemB:Object):int
            {
                return ObjectUtil.numericCompare(itemA.totalRecords, itemB.totalRecords);
            }

            private function percentSortCompareFunction(itemA:Object, itemB:Object):int
            {
                return ObjectUtil.numericCompare(itemA.percent, itemB.percent);
            }
            
            private function dateSortCompareFunction(itemA:Object, itemB:Object):int
            {
                return ObjectUtil.dateCompare(itemA.dateEnd, itemB.dateEnd);
            }
            
        ]]>
    </mx:Script>
    <mx:VBox width="30%" height="100%" paddingLeft="10" paddingRight="10">
        <mx:HBox height="4%">
            <mx:Label text="{resourceManager.getString('resources','statuscomponent.startDateTime')}" width="{widthFields}"/>
            <mx:Text id="startDateTime" text="{model.startDateTime}" />
        </mx:HBox>
        <mx:HBox height="4%">
            <mx:Label text="{resourceManager.getString('resources','statuscomponent.endDateTime')}" width="{widthFields}"/>
            <mx:Text id="endDatetime" text="{model.endDateTime}"/>
        </mx:HBox>
        <mx:HBox height="4%">
            <mx:Label text="{resourceManager.getString('resources','statuscomponent.status')}" width="{widthFields}"/>
            <mx:Text id="status" text="{model.status}"/>
        </mx:HBox>
        <mx:HBox height="4%">
            <mx:Label text="{resourceManager.getString('resources','statuscomponent.globalTotal')}" width="{widthFields}"/>
            <mx:Text id="globalTotal" text="{model.globalTotal}"/>
        </mx:HBox>
        <mx:HBox height="4%">
            <mx:Label text="{resourceManager.getString('resources','statuscomponent.globalProcessed')}" width="{widthFields}"/>
            <mx:Text id="globalProcessed" text="{model.globalProcessed}"/>
        </mx:HBox>
        <mx:HBox height="4%">
            <mx:Label text="{resourceManager.getString('resources','statuscomponent.percent')}" width="{widthFields}"/>
            <mx:Text id="globalPercent" text="{model.globalPercent}"/>
        </mx:HBox>
		<mx:HBox height="4%">
			<mx:Label text="{resourceManager.getString('resources','statuscomponent.user')}" width="{widthFields}"/>
			<mx:Text id="user" text="{model.user}"/>
		</mx:HBox>
		<mx:HBox height="4%">
			<mx:Label text="{resourceManager.getString('resources','statuscomponent.userRunning')}" width="{widthFields}"/>
			<mx:Text id="userRunning" text="{model.userRunning}"/>
		</mx:HBox>
        <mx:HBox height="4%" width="100%">
            <mx:Label text="{resourceManager.getString('resources','statuscomponent.observations')}" width="{widthFields}"/>
        </mx:HBox>
        <mx:TextArea id="observations" wordWrap="true" text="{model.observations}" 
            width="100%" height="50%" 
            editable="false"/>
    </mx:VBox>
    <mx:VBox width="70%" height="100%">
        <mx:AdvancedDataGrid id="toProcessList"
            width="100%" height="91%"
            draggableColumns="false"
            dataProvider="{model.onProcessList}"
            sortableColumns="true">
            <mx:columns>
                <mx:AdvancedDataGridColumn dataField="store" sortCompareFunction="storeSortCompareFunction" labelFunction="statusLabelFunction" 
                    headerText="{resourceManager.getString('resources','statuscomponent.store')}"/>
                <mx:AdvancedDataGridColumn dataField="areaType" sortCompareFunction="areaSortCompareFunction" labelFunction="statusLabelFunction" 
                    headerText="{resourceManager.getString('resources','statuscomponent.areaType')}"/>
                <mx:AdvancedDataGridColumn dataField="dateEnd" sortCompareFunction="dateSortCompareFunction" labelFunction="statusLabelFunction"
                    headerText="{resourceManager.getString('resources','statuscomponent.dateEnd')}"/>
                <mx:AdvancedDataGridColumn dataField="upRecords" sortCompareFunction="upRecordsSortCompareFunction" 
                    headerText="{resourceManager.getString('resources','statuscomponent.processedRecords')}"
                    textAlign="center"/>
                <mx:AdvancedDataGridColumn dataField="totalRecords" sortCompareFunction="totalRecordsSortCompareFunction" 
                    headerText="{resourceManager.getString('resources','statuscomponent.totalRecords')}"
                    textAlign="center"/>
                <mx:AdvancedDataGridColumn dataField="percent" sortCompareFunction="percentSortCompareFunction" 
                    headerText="{resourceManager.getString('resources','statuscomponent.percentage')}"
                    textAlign="center"/>
            </mx:columns>
        </mx:AdvancedDataGrid>

        <!--<mx:List id="onProcessList"
            width="100%" height="96%"
            dataProvider="{model.onProcessList}"
            itemRenderer="com.scopix.reporting.view.renderer.OnProcessListRenderer" />-->

		<mx:HBox horizontalAlign="center" 
            width="100%" height="4%" paddingTop="10">
			<mx:Button id="autoRefresh" 
					   width="130"
					   label="{model.autoRefreshLabel}"
					   enabled="{model.autoRefreshButtonEnable}"
					   click="{action.enabledDisablesRefresh()}"/>
            <mx:Button id="cancelProcess" 
                width="130"
                label="{resourceManager.getString('resources','statuscomponent.cancelProcess')}"
                enabled="{model.cancelProcessButtonEnable}"
                click="{action.cancelUpload()}"/>
			<mx:Button id="enabledAutomaticProcess" 
					   width="130"
					   label="{model.enableUploadingAutomaticLabel}"
					   enabled="{model.enableUploadingAutomaticButtonEnable}"
					   click="{action.enableDisableUploadingAutomatic()}"/>
			
        </mx:HBox>
    </mx:VBox>
</mx:HBox>