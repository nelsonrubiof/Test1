# NOTE: all folder names must have // or / at its ending.
#
# PRODUCTION SETTINGS|
#

EvidenceWebService.URL = http://localhost:8080/evidence-services/spring/services/EvidenceWebService

# upload from extraction agent to evidence manager
UploadJob.uploadLocalDir = /media2/processed/ees_lowes_1/
UploadJob.uploadHost = 127.0.0.1
UploadJob.uploadUser = periscope.data
UploadJob.uploadPassword = p3r1sc0p3
UploadJob.corporate = Lowes
UploadJob.uploadRemoteDir = /data/ftp/evidence/Lowes/
#This property can be: FTP, SFTP, NETBIOS, LOCAL (copy to extern hard disk)
UploadJob.fileManagerType = SFTP
#This variable is exclusive for LOCAL file manager type
UploadJob.protocolToUpload = SFTP
#Wait for running jobs to finish
UploadJob.waitTime = 10000
# Cron expressions reference http://quartz.sourceforge.net/javadoc/org/quartz/CronTrigger.html
# Field Name            Allowed Values   Allowed Special Characters
# Seconds               0-59             , - * /
# Minutes               0-59             , - * /
# Hours                 0-23             , - * /
# Day-of-month          1-31             , - * ? / L W C
# Month                 1-12 or JAN-DEC  , - * /
# Day-of-Week           1-7 or SUN-SAT   , - * ? / L C #
# Year (Optional)       empty, 1970-2099 , - * /

UploadJob.uploadCronExpression=0/30 * * * * ?
UploadJob.uploadMaxThreads=10

BWMFilePath=/media1/
BroadwareCallback=http://localhost:8080/ees/
BroadwareCallback.downloadMaxThreads = 3

VMSGatewayCallback=http://localhost:8080/ees/
VMSGatewayCallback.downloadMaxThreads = 3

ApacheWebServerPort=8090

#Comandos para extraccion HD
#DeviceUtil.mount = mount -t ext3 /dev/sdc1 /mnt/uploadDisk/
DeviceUtil.mount = cryptsetup luksOpen /dev/sdc1 extraible1 < /root/pass.key && mount -t ext3 /dev/mapper/extraible1 /mnt/uploadDisk
#DeviceUtil.unmount = umount /mnt/uploadDisk/
DeviceUtil.unmount = umount /mnt/uploadDisk/ && cryptsetup luksClose /dev/mapper/extraible1
DeviceUtil.checkMountCommand = dir
#DeviceUtil.checkMountCommand = df

DeviceUtil.externalDevice = sdc1
DeviceUtil.rootFolder = /mnt/uploadDisk/
DeviceUtil.mainControlFile = main.ctrl
DeviceUtil.createPartitionCommand = parted -i /dev/sdc mkpart primary 0 750157
DeviceUtil.checkPartitionCommand = fdisk -l
DeviceUtil.formatPartitionCommand = mkfs -t ext3 /dev/sdc1
DeviceUtil.mountCronExpression=0 0 11 * * ?
DeviceUtil.unmountCronExpression=0 5 11 * * ?
DeviceUtil.encrypted=false
DeviceUtil.labelEncryptedPartition=extraible1

#Motion Detection cron expression
MotionDetection.cronExpression=0 0 23 * * ?
MotionDetection.camerasLocalDir = d:\\temp\\cameras\\
MotionDetection.delay = -30

SituationExtractionRequest.url =http://localhost:8080/ees/
#NextLevel.urlCentral=https://nextls.net
#NextLevel.userCentral=eyal.shats@scopixsolutions.com
#NextLevel.passwordCentral=ultrea
#NextLevel.clientCentral=SCOPIX
#NextLevel.gatewayID=d863523a-33f9-11e0-9b4b-00012ebc4f48
#
#NextLevel.urlGateway=
##https://64.81.251.106
#NextLevel.userGateway=superuser
#NextLevel.passwordGateway=superuser
##se espera central o gateway para determinar el tipo de conexion a la camara
#NextLevel.connectionType=gateway
##default 443 si la urlGateway no tiene algun ej 9050
#NextLevel.portHttps = 443

#Timeout en segundos para las solicitudes de exportar archivos con NextLevel (por defecto 300 segundos: 5 minutos)
nextLevel3.timeoutInSec=120
#Duraci\u00f3n en segundos de la espera de los ciclos del hilo de escucha de eventos -NextLevel3EventListenerThread- (por defecto 60 segundos: 1 minuto)
nextLevel3.eventWaitTimeInSec=30
#Formato o extensi\u00f3n para archivos de video en la nueva versi\u00f3n de integraci\u00f3n con NextLevel
nextLevel3.videoFormat=.flv
#streamProfile, tipo de formato de video para exportar.
nextLevel3.streamProfile=0
#exportProfile, tipo de formato de video para exportar.
nextLevel3.exportProfile=0

############ video-converter ############
#criterio para decidir si el video debe ser convertido o no (S o N)
converter.execute=N
#extensiones validas para convertir
converter.extensions=asf,avi
#directorio en donde se copiaran videos para conversion
converter.path=D:/converter/prueba
converter.path_converted=D:/converter/prueba_converted

#url servicio de video converter
converter.url=http://localhost:8080/video-converter/services/REST/
#indica si debe esperar callback del converter o no (S o N)
converter.wait.callback=N
#url notificacion (callback) para converter
converter.notify.url=http://localhost:8080/ees/spring/videoconverterfileready
#########################################

#### Cisco 7 ####
cisco7.video.downloadMaxThreads=5
cisco7.image.downloadMaxThreads=20
cisco7.authentication.retry=2
cisco7.keepAlive=N
#intervalo en segundos
cisco7.keepAlive.interval=240

##Para el manejo de thread simultaneos de extraccion de evidencias
#Se inicializa al inicio del sistema no se puede cambiar en ejecucion
pool.imageExtractor.max = 10
pool.videoExtractor.max = 3

##Para el manejo de thread de HTTP requests
#Se inicializa al inicio del sistema no se puede cambiar en ejecucion
httpClient.maxRoutes = 100
httpClient.maxPerRoute = 25

#### Cisco-PeopleCounting ####
cisco.pcounting.downloadMaxThreads=5
cisco.pcounting.service.url=http://localhost:8080/cisco-people-counting/spring/services/REST
cisco.pcounting.notify.url=http://localhost:8080/ees/spring/ciscopeoplecountingfileready

#### Vadaro Listeners ####
vadaro.listener.maxThreads = 15
vadaro.listener.restartDelay.minutes = 20
vadaro.listener.reconnecttDelay.seconds = 20

#### check images ####
check.cisco7.images=N

### Raygun ###
RAYGUN_IS_ACTIVE=false
RAYGUN_KEY=jgWxcMVnfAjnJkX0nz1Zng==
RAYGUN_TAGS=EES
RAYGUN__VERSION=1



RANDOM.before = 45