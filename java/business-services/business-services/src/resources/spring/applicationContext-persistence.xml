<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <import resource="classpath:spring/applicationContext-persistence-transactions.xml" />
    
    <context:component-scan base-package="com.scopix.periscope" />

    <bean id="sessionFactory" autowire="default"
          class="com.scopix.periscope.frameworksfoundation.hibernate.config.CustomAnnotationSessionFactory">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="dataSource" autowire="default"
          class="com.scopix.periscope.periscopefoundation.persistence.datasource.CustomDataSource"
          destroy-method="close" init-method="init" >
        <property name="testOnBorrow" value="true" />
        <property name="validationQuery" value="select 1" />
    </bean>
                
    <bean id="schemaExportHelper" autowire="default"
          class="com.scopix.periscope.frameworksfoundation.hibernate.SchemaExportHelper">
        <property name="dataSource" ref="dataSource" />
    </bean>
        
    <bean id="sqlExportHelper" autowire="default"
          class="com.scopix.periscope.frameworksfoundation.hibernate.SQLExportHelper" init-method="init">
        <property name="dataSource" ref="dataSource" />
    </bean>
        
    <!--Para el uso en BW-->
    <!--
Lo eliminamos para poder independizar el control de las conexiones a BW de las de BS
<bean id="sessionFactoryBW" autowire="default"
        class="com.scopix.periscope.businesswarehouse.datasource.CustomAnnotationSessionFactoryBW">
        <property name="dataSource" ref="dataSourceBW" />
    </bean>-->

    <bean id="transferBWHibernateDAO"
          class="com.scopix.periscope.businesswarehouse.transfer.dao.TransferBWHibernateDAO">
        <property name="dataSourceBW" ref="dataSourceBW" />
    </bean>

    <bean id="dataSourceBW" autowire="default"
          class="com.scopix.periscope.businesswarehouse.datasource.CustomDataSourceBW"
          destroy-method="close" init-method="init" >
        <property name="testOnBorrow" value="true" />
        <property name="validationQuery" value="select 1" />
    </bean>


    <!--Para el uso en Reporting-->
    <bean id="reportingUploadDao" class="com.scopix.periscope.reporting.transfer.dao.ReportingUploadDao">
        <property name="dataSourceRep" ref="dataSourceReporting"/>
        <property name="dataSourceBS" ref="dataSource"/>
    </bean>

    <bean id="dataSourceReporting" destroy-method="close"
          class="com.scopix.periscope.reporting.datasource.ReportingUploadDataSource" init-method="init">
        <property name="testOnBorrow" value="true" />
        <property name="validationQuery" value="select 1" />
    </bean>
</beans>
